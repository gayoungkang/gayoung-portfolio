{"ast":null,"code":"import{theme}from\"@/styles/theme\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";const Card=props=>{const{children,onClick,$isHover=true,$backgroundColor=theme.colors.background.dark,$color=theme.colors.grey[100],$borderRadius=theme.borderRadius[20]}=props;return/*#__PURE__*/_jsx(ListItem,{onClick:onClick,$isHover:$isHover,$backgroundColor:$backgroundColor,$color:$color,$borderRadius:$borderRadius,children:children});};export default Card;const ListItem=styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 25vw;\n  padding: 20px 30px;\n  margin: 20px;\n  background-color: ${props=>props.$backgroundColor};\n  color: ${props=>props.$color};\n  border-radius: ${props=>props.$borderRadius};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 2px 4px 12px #00000014;\n  ${_ref=>{let{$isHover}=_ref;return $isHover&&`\n    &:hover {\n      box-shadow: 2px 4px 16px #00000029;\n      transform: scale3d(1.01, 1.01, 1.01);\n    }\n\n    &:active {\n      transform: scale(1);\n    }\n  `;}}\n`;","map":{"version":3,"names":["theme","styled","jsx","_jsx","Card","props","children","onClick","$isHover","$backgroundColor","colors","background","dark","$color","grey","$borderRadius","borderRadius","ListItem","div","_ref"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Surfaces/Card.tsx"],"sourcesContent":["import { theme } from \"@/styles/theme\";\nimport { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nexport type CardProps = {\n  children: ReactNode;\n  onClick?: () => void;\n  $isHover?: boolean;\n  $backgroundColor?: string;\n  $color?: string;\n  $borderRadius?: string;\n};\n\nconst Card = (props: CardProps) => {\n  const {\n    children,\n    onClick,\n    $isHover = true,\n    $backgroundColor = theme.colors.background.dark,\n    $color = theme.colors.grey[100],\n    $borderRadius = theme.borderRadius[20],\n  } = props;\n\n  return (\n    <ListItem\n      onClick={onClick}\n      $isHover={$isHover}\n      $backgroundColor={$backgroundColor}\n      $color={$color}\n      $borderRadius={$borderRadius}\n    >\n      {children}\n    </ListItem>\n  );\n};\n\nexport default Card;\n\nconst ListItem = styled.div<{\n  $isHover: boolean;\n  $backgroundColor: string;\n  $color: string;\n  $borderRadius: string;\n}>`\n  position: relative;\n  width: 100%;\n  max-width: 25vw;\n  padding: 20px 30px;\n  margin: 20px;\n  background-color: ${(props) => props.$backgroundColor};\n  color: ${(props) => props.$color};\n  border-radius: ${(props) => props.$borderRadius};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 2px 4px 12px #00000014;\n  ${({ $isHover }) =>\n    $isHover &&\n    `\n    &:hover {\n      box-shadow: 2px 4px 16px #00000029;\n      transform: scale3d(1.01, 1.01, 1.01);\n    }\n\n    &:active {\n      transform: scale(1);\n    }\n  `}\n`;\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,gBAAgB,CAEtC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAWvC,KAAM,CAAAC,IAAI,CAAIC,KAAgB,EAAK,CACjC,KAAM,CACJC,QAAQ,CACRC,OAAO,CACPC,QAAQ,CAAG,IAAI,CACfC,gBAAgB,CAAGT,KAAK,CAACU,MAAM,CAACC,UAAU,CAACC,IAAI,CAC/CC,MAAM,CAAGb,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,GAAG,CAAC,CAC/BC,aAAa,CAAGf,KAAK,CAACgB,YAAY,CAAC,EAAE,CACvC,CAAC,CAAGX,KAAK,CAET,mBACEF,IAAA,CAACc,QAAQ,EACPV,OAAO,CAAEA,OAAQ,CACjBC,QAAQ,CAAEA,QAAS,CACnBC,gBAAgB,CAAEA,gBAAiB,CACnCI,MAAM,CAAEA,MAAO,CACfE,aAAa,CAAEA,aAAc,CAAAT,QAAA,CAE5BA,QAAQ,CACD,CAAC,CAEf,CAAC,CAED,cAAe,CAAAF,IAAI,CAEnB,KAAM,CAAAa,QAAQ,CAAGhB,MAAM,CAACiB,GAKtB;AACF;AACA;AACA;AACA;AACA;AACA,sBAAuBb,KAAK,EAAKA,KAAK,CAACI,gBAAgB;AACvD,WAAYJ,KAAK,EAAKA,KAAK,CAACQ,MAAM;AAClC,mBAAoBR,KAAK,EAAKA,KAAK,CAACU,aAAa;AACjD;AACA;AACA;AACA,IAAII,IAAA,MAAC,CAAEX,QAAS,CAAC,CAAAW,IAAA,OACb,CAAAX,QAAQ,EACR;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}