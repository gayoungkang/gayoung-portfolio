{"ast":null,"code":"var _jsxFileName = \"/Users/gayoung/Documents/developer/project/protfolio/src/components/Layout/Section.tsx\";\nimport { theme } from \"@/styles/theme\";\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**---------------------------------------------------------------------------/\n  * ! Section 컴포넌트\n  * * 페이지 내 특정 섹션을 위한 레이아웃 컨테이너\n  * * `flex` 레이아웃을 사용하여 자식 요소를 배치\n  * * `$flexDirection`: 자식 요소의 배치 방향 설정 (기본값: `column`)\n  * * `$justifyContent`: 플렉스 컨테이너 내 정렬 방식 설정\n  * * `$alignItems`: 플렉스 컨테이너 내 항목 정렬 방식 설정\n  * * `$flexWrap`: 플렉스 아이템의 줄 바꿈 여부 설정\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `theme.colors.background.main`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$width`: 너비 설정, 기본값은 `\"100%\"`\n  * * `$padding`: 내부 여백 설정, 기본값은 `\"80px 0\"`\n  * * `$margin`: 외부 여백 설정, 기본값은 `\"0\"`\n  * * 자식 컴포넌트를 `children`으로 받아서 표시\n/**--------------------------------------------------------------------------*/\n\nconst Section = props => {\n  const {\n    $backgroundColor = theme.colors.background.main,\n    $height = \"auto\",\n    $width = \"100%\",\n    $padding = \"80px 0\",\n    $margin = \"0\",\n    children,\n    $flexDirection = \"column\",\n    $justifyContent = \"flex-start\",\n    $alignItems = \"stretch\",\n    $flexWrap = \"nowrap\"\n  } = props;\n  return /*#__PURE__*/_jsxDEV(SectionStyle, {\n    $backgroundColor: $backgroundColor,\n    $height: $height,\n    $width: $width,\n    $padding: $padding,\n    $margin: $margin,\n    $flexDirection: $flexDirection,\n    $justifyContent: $justifyContent,\n    $alignItems: $alignItems,\n    $flexWrap: $flexWrap,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Section;\nexport const SectionStyle = styled.section`\n  width: ${({\n  $width\n}) => $width};\n  height: ${({\n  $height\n}) => $height};\n  display: flex;\n  flex-direction: ${({\n  $flexDirection\n}) => $flexDirection};\n  justify-content: ${({\n  $justifyContent\n}) => $justifyContent};\n  align-items: ${({\n  $alignItems\n}) => $alignItems};\n  flex-wrap: ${({\n  $flexWrap\n}) => $flexWrap};\n  padding: ${({\n  $padding\n}) => $padding};\n  margin: ${({\n  $margin\n}) => $margin};\n  background-color: ${({\n  $backgroundColor\n}) => $backgroundColor};\n`;\n_c2 = SectionStyle;\nexport default Section;\nvar _c, _c2;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"SectionStyle\");","map":{"version":3,"names":["theme","styled","jsxDEV","_jsxDEV","Section","props","$backgroundColor","colors","background","main","$height","$width","$padding","$margin","children","$flexDirection","$justifyContent","$alignItems","$flexWrap","SectionStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","section","_c2","$RefreshReg$"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Layout/Section.tsx"],"sourcesContent":["import { theme } from \"@/styles/theme\";\nimport { ReactNode } from \"react\";\nimport { styled } from \"styled-components\";\n\nexport type SectionProps = {\n  $backgroundColor?: string;\n  $height?: string;\n  $width?: string;\n  $padding?: string;\n  $margin?: string;\n  children: ReactNode;\n  $flexDirection?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  $justifyContent?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  $flexWrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  $alignItems?: \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\";\n};\n\n/**---------------------------------------------------------------------------/\n  * ! Section 컴포넌트\n  * * 페이지 내 특정 섹션을 위한 레이아웃 컨테이너\n  * * `flex` 레이아웃을 사용하여 자식 요소를 배치\n  * * `$flexDirection`: 자식 요소의 배치 방향 설정 (기본값: `column`)\n  * * `$justifyContent`: 플렉스 컨테이너 내 정렬 방식 설정\n  * * `$alignItems`: 플렉스 컨테이너 내 항목 정렬 방식 설정\n  * * `$flexWrap`: 플렉스 아이템의 줄 바꿈 여부 설정\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `theme.colors.background.main`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$width`: 너비 설정, 기본값은 `\"100%\"`\n  * * `$padding`: 내부 여백 설정, 기본값은 `\"80px 0\"`\n  * * `$margin`: 외부 여백 설정, 기본값은 `\"0\"`\n  * * 자식 컴포넌트를 `children`으로 받아서 표시\n/**--------------------------------------------------------------------------*/\n\nconst Section = (props: SectionProps) => {\n  const {\n    $backgroundColor = theme.colors.background.main,\n    $height = \"auto\",\n    $width = \"100%\",\n    $padding = \"80px 0\",\n    $margin = \"0\",\n    children,\n    $flexDirection = \"column\",\n    $justifyContent = \"flex-start\",\n    $alignItems = \"stretch\",\n    $flexWrap = \"nowrap\",\n  } = props;\n\n  return (\n    <SectionStyle\n      $backgroundColor={$backgroundColor}\n      $height={$height}\n      $width={$width}\n      $padding={$padding}\n      $margin={$margin}\n      $flexDirection={$flexDirection}\n      $justifyContent={$justifyContent}\n      $alignItems={$alignItems}\n      $flexWrap={$flexWrap}\n    >\n      {children}\n    </SectionStyle>\n  );\n};\n\nexport const SectionStyle = styled.section<SectionProps>`\n  width: ${({ $width }) => $width};\n  height: ${({ $height }) => $height};\n  display: flex;\n  flex-direction: ${({ $flexDirection }) => $flexDirection};\n  justify-content: ${({ $justifyContent }) => $justifyContent};\n  align-items: ${({ $alignItems }) => $alignItems};\n  flex-wrap: ${({ $flexWrap }) => $flexWrap};\n  padding: ${({ $padding }) => $padding};\n  margin: ${({ $margin }) => $margin};\n  background-color: ${({ $backgroundColor }) => $backgroundColor};\n`;\n\nexport default Section;\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,KAAmB,IAAK;EACvC,MAAM;IACJC,gBAAgB,GAAGN,KAAK,CAACO,MAAM,CAACC,UAAU,CAACC,IAAI;IAC/CC,OAAO,GAAG,MAAM;IAChBC,MAAM,GAAG,MAAM;IACfC,QAAQ,GAAG,QAAQ;IACnBC,OAAO,GAAG,GAAG;IACbC,QAAQ;IACRC,cAAc,GAAG,QAAQ;IACzBC,eAAe,GAAG,YAAY;IAC9BC,WAAW,GAAG,SAAS;IACvBC,SAAS,GAAG;EACd,CAAC,GAAGb,KAAK;EAET,oBACEF,OAAA,CAACgB,YAAY;IACXb,gBAAgB,EAAEA,gBAAiB;IACnCI,OAAO,EAAEA,OAAQ;IACjBC,MAAM,EAAEA,MAAO;IACfC,QAAQ,EAAEA,QAAS;IACnBC,OAAO,EAAEA,OAAQ;IACjBE,cAAc,EAAEA,cAAe;IAC/BC,eAAe,EAAEA,eAAgB;IACjCC,WAAW,EAAEA,WAAY;IACzBC,SAAS,EAAEA,SAAU;IAAAJ,QAAA,EAEpBA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB,CAAC;AAACC,EAAA,GA7BIpB,OAAO;AA+Bb,OAAO,MAAMe,YAAY,GAAGlB,MAAM,CAACwB,OAAqB;AACxD,WAAW,CAAC;EAAEd;AAAO,CAAC,KAAKA,MAAM;AACjC,YAAY,CAAC;EAAED;AAAQ,CAAC,KAAKA,OAAO;AACpC;AACA,oBAAoB,CAAC;EAAEK;AAAe,CAAC,KAAKA,cAAc;AAC1D,qBAAqB,CAAC;EAAEC;AAAgB,CAAC,KAAKA,eAAe;AAC7D,iBAAiB,CAAC;EAAEC;AAAY,CAAC,KAAKA,WAAW;AACjD,eAAe,CAAC;EAAEC;AAAU,CAAC,KAAKA,SAAS;AAC3C,aAAa,CAAC;EAAEN;AAAS,CAAC,KAAKA,QAAQ;AACvC,YAAY,CAAC;EAAEC;AAAQ,CAAC,KAAKA,OAAO;AACpC,sBAAsB,CAAC;EAAEP;AAAiB,CAAC,KAAKA,gBAAgB;AAChE,CAAC;AAACoB,GAAA,GAXWP,YAAY;AAazB,eAAef,OAAO;AAAC,IAAAoB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}