{"ast":null,"code":"import { ERROR_INVALID_HEX_COLOR } from \"@/constants/string\";\nimport { theme } from \"@/styles/theme\";\n\n/**---------------------------------------------------------------------------/\n  * ! darken 함수\n  * * 주어진 색상을 어둡게 조정하는 함수\n  * * HEX 색상 값을 받아서, `percentage`만큼 어둡게 만듦 (기본값: 20%)\n  * * 유효하지 않은 HEX 색상 형식이 전달되면 경고 메시지를 출력하고, 기본 색상(검정색)으로 대체\n  * * `color`는 HEX 형식이어야 하며, 형식이 잘못되었을 경우 경고 메시지 출력\n  * * 색상 값은 `#RRGGBB` 형식의 문자열로 반환\n/**--------------------------------------------------------------------------*/\n\nexport const darken = (color, percentage = 0.2) => {\n  if (!color || !/^#[0-9A-Fa-f]{6}$/i.test(color)) {\n    console.warn(`${ERROR_INVALID_HEX_COLOR}`);\n    color = theme.colors.black;\n  }\n  const colorHex = color.replace(\"#\", \"\");\n  if (colorHex.length !== 6) {\n    console.warn(`${ERROR_INVALID_HEX_COLOR}`);\n    color = theme.colors.black;\n  }\n  const r = parseInt(colorHex.substr(0, 2), 16);\n  const g = parseInt(colorHex.substr(2, 2), 16);\n  const b = parseInt(colorHex.substr(4, 2), 16);\n  const newR = Math.max(r - Math.round(r * percentage), 0);\n  const newG = Math.max(g - Math.round(g * percentage), 0);\n  const newB = Math.max(b - Math.round(b * percentage), 0);\n  return `#${newR.toString(16).padStart(2, \"0\")}${newG.toString(16).padStart(2, \"0\")}${newB.toString(16).padStart(2, \"0\")}`;\n};","map":{"version":3,"names":["ERROR_INVALID_HEX_COLOR","theme","darken","color","percentage","test","console","warn","colors","black","colorHex","replace","length","r","parseInt","substr","g","b","newR","Math","max","round","newG","newB","toString","padStart"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/utils/colorUtils.ts"],"sourcesContent":["import { ERROR_INVALID_HEX_COLOR } from \"@/constants/string\";\nimport { theme } from \"@/styles/theme\";\n\n/**---------------------------------------------------------------------------/\n  * ! darken 함수\n  * * 주어진 색상을 어둡게 조정하는 함수\n  * * HEX 색상 값을 받아서, `percentage`만큼 어둡게 만듦 (기본값: 20%)\n  * * 유효하지 않은 HEX 색상 형식이 전달되면 경고 메시지를 출력하고, 기본 색상(검정색)으로 대체\n  * * `color`는 HEX 형식이어야 하며, 형식이 잘못되었을 경우 경고 메시지 출력\n  * * 색상 값은 `#RRGGBB` 형식의 문자열로 반환\n/**--------------------------------------------------------------------------*/\n\nexport const darken = (color?: string, percentage: number = 0.2): string => {\n  if (!color || !/^#[0-9A-Fa-f]{6}$/i.test(color)) {\n    console.warn(`${ERROR_INVALID_HEX_COLOR}`);\n    color = theme.colors.black;\n  }\n\n  const colorHex = color.replace(\"#\", \"\");\n\n  if (colorHex.length !== 6) {\n    console.warn(`${ERROR_INVALID_HEX_COLOR}`);\n    color = theme.colors.black;\n  }\n\n  const r = parseInt(colorHex.substr(0, 2), 16);\n  const g = parseInt(colorHex.substr(2, 2), 16);\n  const b = parseInt(colorHex.substr(4, 2), 16);\n\n  const newR = Math.max(r - Math.round(r * percentage), 0);\n  const newG = Math.max(g - Math.round(g * percentage), 0);\n  const newB = Math.max(b - Math.round(b * percentage), 0);\n\n  return `#${newR.toString(16).padStart(2, \"0\")}${newG\n    .toString(16)\n    .padStart(2, \"0\")}${newB.toString(16).padStart(2, \"0\")}`;\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,oBAAoB;AAC5D,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAGA,CAACC,KAAc,EAAEC,UAAkB,GAAG,GAAG,KAAa;EAC1E,IAAI,CAACD,KAAK,IAAI,CAAC,oBAAoB,CAACE,IAAI,CAACF,KAAK,CAAC,EAAE;IAC/CG,OAAO,CAACC,IAAI,CAAC,GAAGP,uBAAuB,EAAE,CAAC;IAC1CG,KAAK,GAAGF,KAAK,CAACO,MAAM,CAACC,KAAK;EAC5B;EAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAEvC,IAAID,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;IACzBN,OAAO,CAACC,IAAI,CAAC,GAAGP,uBAAuB,EAAE,CAAC;IAC1CG,KAAK,GAAGF,KAAK,CAACO,MAAM,CAACC,KAAK;EAC5B;EAEA,MAAMI,CAAC,GAAGC,QAAQ,CAACJ,QAAQ,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAC7C,MAAMC,CAAC,GAAGF,QAAQ,CAACJ,QAAQ,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAC7C,MAAME,CAAC,GAAGH,QAAQ,CAACJ,QAAQ,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAE7C,MAAMG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACP,CAAC,GAAGM,IAAI,CAACE,KAAK,CAACR,CAAC,GAAGT,UAAU,CAAC,EAAE,CAAC,CAAC;EACxD,MAAMkB,IAAI,GAAGH,IAAI,CAACC,GAAG,CAACJ,CAAC,GAAGG,IAAI,CAACE,KAAK,CAACL,CAAC,GAAGZ,UAAU,CAAC,EAAE,CAAC,CAAC;EACxD,MAAMmB,IAAI,GAAGJ,IAAI,CAACC,GAAG,CAACH,CAAC,GAAGE,IAAI,CAACE,KAAK,CAACJ,CAAC,GAAGb,UAAU,CAAC,EAAE,CAAC,CAAC;EAExD,OAAO,IAAIc,IAAI,CAACM,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGH,IAAI,CACjDE,QAAQ,CAAC,EAAE,CAAC,CACZC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGF,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}