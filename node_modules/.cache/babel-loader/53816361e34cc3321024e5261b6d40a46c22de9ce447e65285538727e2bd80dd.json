{"ast":null,"code":"var _jsxFileName = \"/Users/gayoung/Documents/developer/project/protfolio/src/containers/main/ContactUsAside.tsx\",\n  _s = $RefreshSig$();\nimport Box from \"@/components/Layout/Box\";\nimport Typography from \"@/components/Typography/Typography\";\nimport { useTranslation } from \"react-i18next\";\nimport { PHONE_NUMBER } from \"@/constants/string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactUsAside = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleCall = () => {\n    window.location.href = {\n      PHONE_NUMBER\n    };\n    const textToCopy = \"복사할 텍스트\";\n    const handleCopy = async () => {\n      try {\n        await navigator.clipboard.writeText(textToCopy);\n        alert(\"텍스트가 복사되었습니다!\");\n      } catch (err) {\n        console.error(\"복사 실패:\", err);\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      $variant: \"h2\",\n      $marginBottom: \"5%\",\n      $textAlign: \"center\",\n      children: t(\"CONTACT_US_SECTION_MESSAGE_TITLE\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactUsAside, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ContactUsAside;\nexport default ContactUsAside;\nvar _c;\n$RefreshReg$(_c, \"ContactUsAside\");","map":{"version":3,"names":["Box","Typography","useTranslation","PHONE_NUMBER","jsxDEV","_jsxDEV","ContactUsAside","_s","t","handleCall","window","location","href","textToCopy","handleCopy","navigator","clipboard","writeText","alert","err","console","error","children","$variant","$marginBottom","$textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/containers/main/ContactUsAside.tsx"],"sourcesContent":["import Box from \"@/components/Layout/Box\";\nimport Typography from \"@/components/Typography/Typography\";\nimport { useTranslation } from \"react-i18next\";\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\nimport AccessAlarmIcon from \"@mui/icons-material/AccessAlarm\";\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\nimport { PHONE_NUMBER } from \"@/constants/string\";\n\nconst ContactUsAside = () => {\n  const { t } = useTranslation();\n  const handleCall = () => {\n    window.location.href = { PHONE_NUMBER };\n    const textToCopy = \"복사할 텍스트\";\n\n    const handleCopy = async () => {\n      try {\n        await navigator.clipboard.writeText(textToCopy);\n        alert(\"텍스트가 복사되었습니다!\");\n      } catch (err) {\n        console.error(\"복사 실패:\", err);\n      }\n    };\n  };\n\n  return (\n    <Box>\n      <Typography $variant='h2' $marginBottom='5%' $textAlign='center'>\n        {t(\"CONTACT_US_SECTION_MESSAGE_TITLE\")}\n      </Typography>\n    </Box>\n  );\n};\nexport default ContactUsAside;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,yBAAyB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,cAAc,QAAQ,eAAe;AAI9C,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAE,CAAC,GAAGN,cAAc,CAAC,CAAC;EAC9B,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG;MAAET;IAAa,CAAC;IACvC,MAAMU,UAAU,GAAG,SAAS;IAE5B,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,UAAU,CAAC;QAC/CK,KAAK,CAAC,eAAe,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;MAC9B;IACF,CAAC;EACH,CAAC;EAED,oBACEd,OAAA,CAACL,GAAG;IAAAsB,QAAA,eACFjB,OAAA,CAACJ,UAAU;MAACsB,QAAQ,EAAC,IAAI;MAACC,aAAa,EAAC,IAAI;MAACC,UAAU,EAAC,QAAQ;MAAAH,QAAA,EAC7Dd,CAAC,CAAC,kCAAkC;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvBID,cAAc;EAAA,QACJJ,cAAc;AAAA;AAAA4B,EAAA,GADxBxB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}