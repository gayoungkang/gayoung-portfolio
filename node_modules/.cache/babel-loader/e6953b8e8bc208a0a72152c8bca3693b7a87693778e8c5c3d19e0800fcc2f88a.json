{"ast":null,"code":"import{theme}from\"@/styles/theme\";import{darken}from\"@/utils/colorUtils\";import{styled}from\"styled-components\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**---------------------------------------------------------------------------/\n  * ! Button 컴포넌트\n  * * `children`, `startIcon`, `endIcon`, `disabled`, `onClick`, `$fileUrl`, `$fileName` 지원\n  * * `variant`: `text`, `contained`, `outlined` 옵션 제공\n  * * 기본 `pointer`에서 `disabled` 상태일 경우 `not-allowed` 스타일 적용\n  * * `contained` variant에서 배경색은 `backgroundColor`, 텍스트 색상은 `color`로 설정\n  * * `outlined` variant에서 테두리 색상은 `backgroundColor`, 배경은 투명\n  * * `text` variant에서 텍스트 색상은 `backgroundColor`, 배경은 투명\n  * * `startIcon`, `endIcon`으로 아이콘을 버튼 좌우에 배치할 수 있음\n  * * `margin` 관련 스타일 (`$marginTop`, `$marginBottom`, `$marginLeft`, `$marginRight`) 설정 가능\n  * * `borderRadius`를 통해 버튼의 모서리 라운드 설정 가능\n  * * `fontFamily`: `\"kr\"` (한글) 또는 `\"en\"` (영어) 설정 가능\n  * * `$fileUrl`과 `$fileName`이 제공되면 버튼 클릭 시 파일 다운로드 처리\n  * * `handleDownload` 함수는 `$fileUrl`과 `$fileName`을 이용해 동적으로 파일 다운로드 링크 생성\n  * * hover 시, `contained` variant는 `backgroundColor`가 어두워짐 (darken 처리)\n  * * `outlined` variant는 hover 시 테두리 색상 변경\n/**--------------------------------------------------------------------------*/const Button=_ref=>{let{children,$variant=\"contained\",$color=theme.colors.grey[100],$backgroundColor=theme.colors.primary.main,disabled=false,startIcon,endIcon,onClick,$fileUrl,$fileName,$marginTop,$marginBottom,$marginLeft,$marginRight,$borderRadius,$hasMargin,$fontFamily=\"kr\"}=_ref;const handleDownload=()=>{if(!$fileUrl||!$fileName)return;const link=document.createElement(\"a\");link.href=$fileUrl;link.setAttribute(\"download\",$fileName);document.body.appendChild(link);link.click();document.body.removeChild(link);};const handleClick=()=>{if($fileUrl&&$fileName){handleDownload();}else if(onClick){onClick();}};return/*#__PURE__*/_jsxs(ButtonStyle,{$variant:$variant,$color:$color,$backgroundColor:$backgroundColor,disabled:disabled,onClick:handleClick,$fileUrl:$fileUrl,$fileName:$fileName,$marginTop:$marginTop,$marginBottom:$marginBottom,$marginLeft:$marginLeft,$marginRight:$marginRight,$borderRadius:$borderRadius,$hasMargin:$hasMargin,children:[startIcon&&/*#__PURE__*/_jsx(IconWrapper,{$color:$color,children:startIcon}),/*#__PURE__*/_jsx(TextWrapper,{$hasMargin:!!startIcon||!!endIcon,$fontFamily:$fontFamily,children:children}),endIcon&&/*#__PURE__*/_jsx(IconWrapper,{$color:$color,children:endIcon})]});};const TextWrapper=styled.span`\n  ${_ref2=>{let{$hasMargin}=_ref2;return $hasMargin&&\"margin: 0 8px;\";}}\n  font-family: ${props=>props.$fontFamily===\"kr\"?theme.fonts.kr:theme.fonts.en};\n`;export const ButtonStyle=styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: ${props=>props.disabled?\"not-allowed\":\"pointer\"};\n  border: 2px solid transparent;\n  margin-top: ${props=>props.$marginTop||\"0\"};\n  margin-bottom: ${props=>props.$marginBottom||\"0\"};\n  margin-left: ${props=>props.$marginLeft||\"0\"};\n  margin-right: ${props=>props.$marginRight||\"0\"};\n  border-radius: ${props=>props.$borderRadius||theme.borderRadius[4]};\n  background-color: ${props=>props.$variant===\"contained\"&&!props.disabled?props.$backgroundColor:\"transparent\"};\n  color: ${props=>props.$variant===\"contained\"&&!props.disabled?props.$color:props.$variant===\"text\"?props.$backgroundColor:props.$color};\n  border: ${props=>props.$variant===\"outlined\"&&!props.disabled?`2px solid ${props.$backgroundColor}`:\"none\"};\n  &:hover {\n    background-color: ${props=>props.$variant===\"contained\"&&!props.disabled?darken(props.$backgroundColor,0.2):\"transparent\"};\n    border-color: ${props=>props.$variant===\"outlined\"&&!props.disabled?darken(props.$backgroundColor,0.2):\"transparent\"};\n  }\n  &:disabled {\n    background-color: ${props=>props.$variant===\"contained\"?theme.colors.disabled.contained:\"transparent\"};\n    color: #bdbdbd;\n    border: ${props=>props.$variant===\"outlined\"?`2px solid ${theme.colors.disabled.outlined}`:\"none\"};\n    cursor: not-allowed;\n  }\n`;const IconWrapper=styled.span`\n  margin: 0 8px;\n  display: flex;\n  color: ${props=>props.$color};\n`;export default Button;","map":{"version":3,"names":["theme","darken","styled","jsx","_jsx","jsxs","_jsxs","Button","_ref","children","$variant","$color","colors","grey","$backgroundColor","primary","main","disabled","startIcon","endIcon","onClick","$fileUrl","$fileName","$marginTop","$marginBottom","$marginLeft","$marginRight","$borderRadius","$hasMargin","$fontFamily","handleDownload","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","handleClick","ButtonStyle","IconWrapper","TextWrapper","span","_ref2","props","fonts","kr","en","button","borderRadius","contained","outlined"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Button/Button.tsx"],"sourcesContent":["import { theme } from \"@/styles/theme\";\nimport { darken } from \"@/utils/colorUtils\";\nimport { ReactNode } from \"react\";\nimport { styled } from \"styled-components\";\n\nexport type ButtonProps = {\n  children: ReactNode;\n  $variant?: \"text\" | \"contained\" | \"outlined\";\n  $color?: string;\n  $backgroundColor?: string;\n  disabled?: boolean;\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  onClick?: () => void;\n  $fileUrl?: string;\n  $fileName?: string;\n  $marginTop?: string;\n  $marginBottom?: string;\n  $marginLeft?: string;\n  $marginRight?: string;\n  $borderRadius?: string;\n  $hasMargin?: boolean;\n  $fontFamily?: \"kr\" | \"en\";\n};\n/**---------------------------------------------------------------------------/\n  * ! Button 컴포넌트\n  * * `children`, `startIcon`, `endIcon`, `disabled`, `onClick`, `$fileUrl`, `$fileName` 지원\n  * * `variant`: `text`, `contained`, `outlined` 옵션 제공\n  * * 기본 `pointer`에서 `disabled` 상태일 경우 `not-allowed` 스타일 적용\n  * * `contained` variant에서 배경색은 `backgroundColor`, 텍스트 색상은 `color`로 설정\n  * * `outlined` variant에서 테두리 색상은 `backgroundColor`, 배경은 투명\n  * * `text` variant에서 텍스트 색상은 `backgroundColor`, 배경은 투명\n  * * `startIcon`, `endIcon`으로 아이콘을 버튼 좌우에 배치할 수 있음\n  * * `margin` 관련 스타일 (`$marginTop`, `$marginBottom`, `$marginLeft`, `$marginRight`) 설정 가능\n  * * `borderRadius`를 통해 버튼의 모서리 라운드 설정 가능\n  * * `fontFamily`: `\"kr\"` (한글) 또는 `\"en\"` (영어) 설정 가능\n  * * `$fileUrl`과 `$fileName`이 제공되면 버튼 클릭 시 파일 다운로드 처리\n  * * `handleDownload` 함수는 `$fileUrl`과 `$fileName`을 이용해 동적으로 파일 다운로드 링크 생성\n  * * hover 시, `contained` variant는 `backgroundColor`가 어두워짐 (darken 처리)\n  * * `outlined` variant는 hover 시 테두리 색상 변경\n/**--------------------------------------------------------------------------*/\n\nconst Button = ({\n  children,\n  $variant = \"contained\",\n  $color = theme.colors.grey[100],\n  $backgroundColor = theme.colors.primary.main,\n  disabled = false,\n  startIcon,\n  endIcon,\n  onClick,\n  $fileUrl,\n  $fileName,\n  $marginTop,\n  $marginBottom,\n  $marginLeft,\n  $marginRight,\n  $borderRadius,\n  $hasMargin,\n  $fontFamily = \"kr\",\n}: ButtonProps) => {\n  const handleDownload = () => {\n    if (!$fileUrl || !$fileName) return;\n\n    const link = document.createElement(\"a\");\n    link.href = $fileUrl;\n    link.setAttribute(\"download\", $fileName);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleClick = () => {\n    if ($fileUrl && $fileName) {\n      handleDownload();\n    } else if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <ButtonStyle\n      $variant={$variant}\n      $color={$color}\n      $backgroundColor={$backgroundColor}\n      disabled={disabled}\n      onClick={handleClick}\n      $fileUrl={$fileUrl}\n      $fileName={$fileName}\n      $marginTop={$marginTop}\n      $marginBottom={$marginBottom}\n      $marginLeft={$marginLeft}\n      $marginRight={$marginRight}\n      $borderRadius={$borderRadius}\n      $hasMargin={$hasMargin}\n    >\n      {startIcon && <IconWrapper $color={$color}>{startIcon}</IconWrapper>}\n      <TextWrapper\n        $hasMargin={!!startIcon || !!endIcon}\n        $fontFamily={$fontFamily}\n      >\n        {children}\n      </TextWrapper>\n      {endIcon && <IconWrapper $color={$color}>{endIcon}</IconWrapper>}\n    </ButtonStyle>\n  );\n};\n\nconst TextWrapper = styled.span<{\n  $hasMargin: boolean;\n  $fontFamily: \"kr\" | \"en\";\n}>`\n  ${({ $hasMargin }) => $hasMargin && \"margin: 0 8px;\"}\n  font-family: ${(props) =>\n    props.$fontFamily === \"kr\" ? theme.fonts.kr : theme.fonts.en};\n`;\n\nexport const ButtonStyle = styled.button<ButtonProps>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  border: 2px solid transparent;\n  margin-top: ${(props) => props.$marginTop || \"0\"};\n  margin-bottom: ${(props) => props.$marginBottom || \"0\"};\n  margin-left: ${(props) => props.$marginLeft || \"0\"};\n  margin-right: ${(props) => props.$marginRight || \"0\"};\n  border-radius: ${(props) => props.$borderRadius || theme.borderRadius[4]};\n  background-color: ${(props) =>\n    props.$variant === \"contained\" && !props.disabled\n      ? props.$backgroundColor\n      : \"transparent\"};\n  color: ${(props) =>\n    props.$variant === \"contained\" && !props.disabled\n      ? props.$color\n      : props.$variant === \"text\"\n      ? props.$backgroundColor\n      : props.$color};\n  border: ${(props) =>\n    props.$variant === \"outlined\" && !props.disabled\n      ? `2px solid ${props.$backgroundColor}`\n      : \"none\"};\n  &:hover {\n    background-color: ${(props) =>\n      props.$variant === \"contained\" && !props.disabled\n        ? darken(props.$backgroundColor, 0.2)\n        : \"transparent\"};\n    border-color: ${(props) =>\n      props.$variant === \"outlined\" && !props.disabled\n        ? darken(props.$backgroundColor, 0.2)\n        : \"transparent\"};\n  }\n  &:disabled {\n    background-color: ${(props) =>\n      props.$variant === \"contained\"\n        ? theme.colors.disabled.contained\n        : \"transparent\"};\n    color: #bdbdbd;\n    border: ${(props) =>\n      props.$variant === \"outlined\"\n        ? `2px solid ${theme.colors.disabled.outlined}`\n        : \"none\"};\n    cursor: not-allowed;\n  }\n`;\n\nconst IconWrapper = styled.span<{ $color: string }>`\n  margin: 0 8px;\n  display: flex;\n  color: ${(props) => props.$color};\n`;\n\nexport default Button;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}