{"ast":null,"code":"var _jsxFileName = \"/Users/gayoung/Documents/developer/project/protfolio/src/components/Feedback/Skeleton.tsx\";\nimport { pulse, wave } from \"@/styles/animation\";\nimport { theme } from \"@/styles/theme\";\nimport { css, styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**---------------------------------------------------------------------------/\n  * ! Skeleton 컴포넌트\n  * * 로딩 상태를 시각적으로 표현하는 컴포넌트\n  * * `$variant`: Skeleton의 모양을 설정 (기본값: 'text', 'circular', 'rectangular', 'rounded' 중 선택 가능)\n  * * `$width`: Skeleton의 너비를 설정 (기본값: '100%')\n  * * `$height`: Skeleton의 높이를 설정 (기본값: '1rem')\n  * * `$animation`: Skeleton의 애니메이션 효과를 설정 (기본값: 'pulse', 'pulse' 또는 'wave' 선택 가능, 'none' 설정 가능)\n  * * `$borderRadius`: Skeleton의 테두리 반경을 설정 (기본값 없음)\n  * * `$backgroundColor`: Skeleton의 배경색을 설정 (기본값: 그라디언트 색상)\n  * * `pulse`: 펄스 애니메이션 효과 (기본값)\n  * * `wave`: 파도 애니메이션 효과\n  * * `none`: 애니메이션을 적용하지 않음\n/**--------------------------------------------------------------------------*/\n\nconst Skeleton = props => {\n  const {\n    $variant = \"text\",\n    $width,\n    $height,\n    $animation = \"wave\",\n    $backgroundColor\n  } = props;\n  return /*#__PURE__*/_jsxDEV(SkeletonStyle, {\n    $variant: $variant,\n    $width: $width,\n    $height: $height,\n    $animation: $animation,\n    $backgroundColor: $backgroundColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Skeleton;\nconst SkeletonStyle = styled.div`\n  width: ${props => props.$width || \"100%\"};\n  height: ${props => props.$height || \"1rem\"};\n  border-radius: ${props => props.$variant === \"circular\" ? \"50%\" : props.$variant === \"rounded\" ? theme.borderRadius[4] : \"0\"};\n  background: ${props => props.$backgroundColor || \"linear-gradient(90deg, #e0e0e033 25%, #555555 50%, #e0e0e033 75%)\"};\n  background-size: 200% 100%;\n  animation: ${props => props.$animation === \"wave\" ? css`\n          ${wave} 1.5s infinite linear\n        ` : props.$animation === \"pulse\" ? css`\n            ${pulse} 1.5s infinite\n          ` : \"none\"};\n`;\n_c2 = SkeletonStyle;\nexport default Skeleton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Skeleton\");\n$RefreshReg$(_c2, \"SkeletonStyle\");","map":{"version":3,"names":["pulse","wave","theme","css","styled","jsxDEV","_jsxDEV","Skeleton","props","$variant","$width","$height","$animation","$backgroundColor","SkeletonStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","borderRadius","_c2","$RefreshReg$"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Feedback/Skeleton.tsx"],"sourcesContent":["import { pulse, wave } from \"@/styles/animation\";\nimport { theme } from \"@/styles/theme\";\nimport { css, styled } from \"styled-components\";\n\nexport type SkeletonProps = {\n  $variant?: \"text\" | \"circular\" | \"rectangular\" | \"rounded\";\n  $width?: string;\n  $height?: string;\n  $animation?: \"pulse\" | \"wave\" | \"none\";\n  $borderRadius?: string;\n  $backgroundColor?: string;\n};\n/**---------------------------------------------------------------------------/\n  * ! Skeleton 컴포넌트\n  * * 로딩 상태를 시각적으로 표현하는 컴포넌트\n  * * `$variant`: Skeleton의 모양을 설정 (기본값: 'text', 'circular', 'rectangular', 'rounded' 중 선택 가능)\n  * * `$width`: Skeleton의 너비를 설정 (기본값: '100%')\n  * * `$height`: Skeleton의 높이를 설정 (기본값: '1rem')\n  * * `$animation`: Skeleton의 애니메이션 효과를 설정 (기본값: 'pulse', 'pulse' 또는 'wave' 선택 가능, 'none' 설정 가능)\n  * * `$borderRadius`: Skeleton의 테두리 반경을 설정 (기본값 없음)\n  * * `$backgroundColor`: Skeleton의 배경색을 설정 (기본값: 그라디언트 색상)\n  * * `pulse`: 펄스 애니메이션 효과 (기본값)\n  * * `wave`: 파도 애니메이션 효과\n  * * `none`: 애니메이션을 적용하지 않음\n/**--------------------------------------------------------------------------*/\n\nconst Skeleton = (props: SkeletonProps) => {\n  const {\n    $variant = \"text\",\n    $width,\n    $height,\n    $animation = \"wave\",\n    $backgroundColor,\n  } = props;\n\n  return (\n    <SkeletonStyle\n      $variant={$variant}\n      $width={$width}\n      $height={$height}\n      $animation={$animation}\n      $backgroundColor={$backgroundColor}\n    />\n  );\n};\n\nconst SkeletonStyle = styled.div<SkeletonProps>`\n  width: ${(props) => props.$width || \"100%\"};\n  height: ${(props) => props.$height || \"1rem\"};\n  border-radius: ${(props) =>\n    props.$variant === \"circular\"\n      ? \"50%\"\n      : props.$variant === \"rounded\"\n        ? theme.borderRadius[4]\n        : \"0\"};\n  background: ${(props) =>\n    props.$backgroundColor ||\n    \"linear-gradient(90deg, #e0e0e033 25%, #555555 50%, #e0e0e033 75%)\"};\n  background-size: 200% 100%;\n  animation: ${(props) =>\n    props.$animation === \"wave\"\n      ? css`\n          ${wave} 1.5s infinite linear\n        `\n      : props.$animation === \"pulse\"\n        ? css`\n            ${pulse} 1.5s infinite\n          `\n        : \"none\"};\n`;\n\nexport default Skeleton;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,IAAI,QAAQ,oBAAoB;AAChD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAoB,IAAK;EACzC,MAAM;IACJC,QAAQ,GAAG,MAAM;IACjBC,MAAM;IACNC,OAAO;IACPC,UAAU,GAAG,MAAM;IACnBC;EACF,CAAC,GAAGL,KAAK;EAET,oBACEF,OAAA,CAACQ,aAAa;IACZL,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBC,UAAU,EAAEA,UAAW;IACvBC,gBAAgB,EAAEA;EAAiB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEN,CAAC;AAACC,EAAA,GAlBIZ,QAAQ;AAoBd,MAAMO,aAAa,GAAGV,MAAM,CAACgB,GAAkB;AAC/C,WAAYZ,KAAK,IAAKA,KAAK,CAACE,MAAM,IAAI,MAAM;AAC5C,YAAaF,KAAK,IAAKA,KAAK,CAACG,OAAO,IAAI,MAAM;AAC9C,mBAAoBH,KAAK,IACrBA,KAAK,CAACC,QAAQ,KAAK,UAAU,GACzB,KAAK,GACLD,KAAK,CAACC,QAAQ,KAAK,SAAS,GAC1BP,KAAK,CAACmB,YAAY,CAAC,CAAC,CAAC,GACrB,GAAG;AACb,gBAAiBb,KAAK,IAClBA,KAAK,CAACK,gBAAgB,IACtB,mEAAmE;AACvE;AACA,eAAgBL,KAAK,IACjBA,KAAK,CAACI,UAAU,KAAK,MAAM,GACvBT,GAAG;AACX,YAAYF,IAAI;AAChB,SAAS,GACDO,KAAK,CAACI,UAAU,KAAK,OAAO,GAC1BT,GAAG;AACb,cAAcH,KAAK;AACnB,WAAW,GACD,MAAM;AAChB,CAAC;AAACsB,GAAA,GAvBIR,aAAa;AAyBnB,eAAeP,QAAQ;AAAC,IAAAY,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}