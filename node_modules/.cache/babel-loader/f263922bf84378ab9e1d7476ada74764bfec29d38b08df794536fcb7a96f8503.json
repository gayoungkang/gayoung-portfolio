{"ast":null,"code":"var _jsxFileName = \"/Users/gayoung/Documents/developer/project/protfolio/src/components/Feedback/LazyImage.tsx\",\n  _s = $RefreshSig$();\nimport Skeleton from \"@/components/Feedback/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt,\n  width = \"100px\",\n  height = \"100px\"\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  useEffect(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => setImageLoaded(true);\n  }, [src]);\n  return imageLoaded ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: src,\n    alt: alt,\n    loading: \"lazy\",\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n    $variant: \"rectangular\",\n    $width: width,\n    $height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LazyImage, \"E9VGM99JSJJEmDL3H7BB2dQ5zTs=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["Skeleton","useState","useEffect","jsxDEV","_jsxDEV","LazyImage","src","alt","width","height","_s","imageLoaded","setImageLoaded","img","Image","onload","loading","fileName","_jsxFileName","lineNumber","columnNumber","$variant","$width","$height","_c","$RefreshReg$"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Feedback/LazyImage.tsx"],"sourcesContent":["import Skeleton from \"@/components/Feedback/Skeleton\";\nimport { useState, useEffect } from \"react\";\n\nexport type LazyImageProps = {\n  src: string;\n  alt: string;\n  width?: string;\n  height?: string;\n  variant?: \"text\" | \"circular\" | \"rectangular\" | \"rounded\";\n};\n\nconst LazyImage = ({\n  src,\n  alt,\n  width = \"100px\",\n  height = \"100px\",\n}: LazyImageProps) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => setImageLoaded(true);\n  }, [src]);\n\n  return imageLoaded ? (\n    <img src={src} alt={alt} loading='lazy' width={width} height={height} />\n  ) : (\n    <Skeleton $variant='rectangular' $width={width} $height={height} />\n  );\n};\n\nexport default LazyImage;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU5C,MAAMC,SAAS,GAAGA,CAAC;EACjBC,GAAG;EACHC,GAAG;EACHC,KAAK,GAAG,OAAO;EACfC,MAAM,GAAG;AACK,CAAC,KAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMW,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACP,GAAG,GAAGA,GAAG;IACbO,GAAG,CAACE,MAAM,GAAG,MAAMH,cAAc,CAAC,IAAI,CAAC;EACzC,CAAC,EAAE,CAACN,GAAG,CAAC,CAAC;EAET,OAAOK,WAAW,gBAChBP,OAAA;IAAKE,GAAG,EAAEA,GAAI;IAACC,GAAG,EAAEA,GAAI;IAACS,OAAO,EAAC,MAAM;IAACR,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAExEhB,OAAA,CAACJ,QAAQ;IAACqB,QAAQ,EAAC,aAAa;IAACC,MAAM,EAAEd,KAAM;IAACe,OAAO,EAAEd;EAAO;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACnE;AACH,CAAC;AAACV,EAAA,CAnBIL,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}