{"ast":null,"code":"import{styled}from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";/**---------------------------------------------------------------------------/\n  * ! Box 컴포넌트\n  * * 다양한 스타일 옵션을 통해 다른 구성 요소를 그룹화하기 위한 일반적인 컨테이너 (div)\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `transparent`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$width`: 너비 설정, 기본값은 `\"100%\"`\n  * * `$marginTop`, `$marginBottom`: 마진 설정, 기본값은 `\"0\"`\n  * * `$paddingTop`, `$paddingBottom`, `$paddingLeft`, `$paddingRight`: 패딩 설정, 기본값은 `\"0\"`\n  * * `$flexDirection`: flex 방향 설정, 기본값은 `\"row\"`\n  * * `$justifyContent`: flex 항목의 수평 정렬 방식, 기본값은 `\"flex-start\"`\n  * * `$flexWrap`: flex 줄넘김 처리 설정, 기본값은 `\"nowrap\"`\n  * * `$alignItems`: flex 항목의 수직 정렬 방식, 기본값은 `\"stretch\"`\n  * * `$display`: display 속성 설정, 기본값은 `\"flex\"`\n  * * 자주 사용되는 레이아웃 컨테이너로, 다양한 스타일 속성을 통해 유연하게 사용 가능\n/**--------------------------------------------------------------------------*/const Box=props=>{const{$backgroundColor=\"transparent\",$height=\"auto\",$width=\"100%\",$marginTop=\"0\",$marginBottom=\"0\",$paddingTop=\"0\",$paddingBottom=\"0\",$paddingLeft=\"0\",$paddingRight=\"0\",$flexDirection=\"row\",$justifyContent=\"flex-start\",$flexWrap=\"nowrap\",$alignItems=\"stretch\",$display=\"flex\",children}=props;return/*#__PURE__*/_jsx(BoxStyle,{$backgroundColor:$backgroundColor,$height:$height,$width:$width,$marginTop:$marginTop,$marginBottom:$marginBottom,$paddingTop:$paddingTop,$paddingBottom:$paddingBottom,$paddingLeft:$paddingLeft,$paddingRight:$paddingRight,$flexDirection:$flexDirection,$justifyContent:$justifyContent,$flexWrap:$flexWrap,$alignItems:$alignItems,$display:$display,children:children});};export const BoxStyle=styled.div`\n  width: ${props=>props.$width};\n  height: ${props=>props.$height};\n  margin-top: ${props=>props.$marginTop};\n  margin-bottom: ${props=>props.$marginBottom};\n  padding-top: ${props=>props.$paddingTop};\n  padding-bottom: ${props=>props.$paddingBottom};\n  padding-left: ${props=>props.$paddingLeft};\n  padding-right: ${props=>props.$paddingRight};\n  display: ${props=>props.$display};\n  flex-direction: ${props=>props.$flexDirection};\n  flex-wrap: ${props=>props.$flexWrap};\n  justify-content: ${props=>props.$justifyContent};\n  align-items: ${props=>props.$alignItems};\n  background-color: ${props=>props.$backgroundColor};\n`;export default Box;","map":{"version":3,"names":["styled","jsx","_jsx","Box","props","$backgroundColor","$height","$width","$marginTop","$marginBottom","$paddingTop","$paddingBottom","$paddingLeft","$paddingRight","$flexDirection","$justifyContent","$flexWrap","$alignItems","$display","children","BoxStyle","div"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Layout/Box.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { styled } from \"styled-components\";\n\nexport type BoxProps = {\n  children: ReactNode;\n  $backgroundColor?: string;\n  $height?: string;\n  $width?: string;\n  $marginTop?: string;\n  $marginBottom?: string;\n  $paddingTop?: string;\n  $paddingBottom?: string;\n  $paddingLeft?: string;\n  $paddingRight?: string;\n  $flexDirection?: string;\n  $justifyContent?: string;\n  $flexWrap?: string;\n  $alignItems?: string;\n  $display?: string;\n};\n/**---------------------------------------------------------------------------/\n  * ! Box 컴포넌트\n  * * 다양한 스타일 옵션을 통해 다른 구성 요소를 그룹화하기 위한 일반적인 컨테이너 (div)\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `transparent`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$width`: 너비 설정, 기본값은 `\"100%\"`\n  * * `$marginTop`, `$marginBottom`: 마진 설정, 기본값은 `\"0\"`\n  * * `$paddingTop`, `$paddingBottom`, `$paddingLeft`, `$paddingRight`: 패딩 설정, 기본값은 `\"0\"`\n  * * `$flexDirection`: flex 방향 설정, 기본값은 `\"row\"`\n  * * `$justifyContent`: flex 항목의 수평 정렬 방식, 기본값은 `\"flex-start\"`\n  * * `$flexWrap`: flex 줄넘김 처리 설정, 기본값은 `\"nowrap\"`\n  * * `$alignItems`: flex 항목의 수직 정렬 방식, 기본값은 `\"stretch\"`\n  * * `$display`: display 속성 설정, 기본값은 `\"flex\"`\n  * * 자주 사용되는 레이아웃 컨테이너로, 다양한 스타일 속성을 통해 유연하게 사용 가능\n/**--------------------------------------------------------------------------*/\n\nconst Box = (props: BoxProps) => {\n  const {\n    $backgroundColor = \"transparent\",\n    $height = \"auto\",\n    $width = \"100%\",\n    $marginTop = \"0\",\n    $marginBottom = \"0\",\n    $paddingTop = \"0\",\n    $paddingBottom = \"0\",\n    $paddingLeft = \"0\",\n    $paddingRight = \"0\",\n    $flexDirection = \"row\",\n    $justifyContent = \"flex-start\",\n    $flexWrap = \"nowrap\",\n    $alignItems = \"stretch\",\n    $display = \"flex\",\n    children,\n  } = props;\n\n  return (\n    <BoxStyle\n      $backgroundColor={$backgroundColor}\n      $height={$height}\n      $width={$width}\n      $marginTop={$marginTop}\n      $marginBottom={$marginBottom}\n      $paddingTop={$paddingTop}\n      $paddingBottom={$paddingBottom}\n      $paddingLeft={$paddingLeft}\n      $paddingRight={$paddingRight}\n      $flexDirection={$flexDirection}\n      $justifyContent={$justifyContent}\n      $flexWrap={$flexWrap}\n      $alignItems={$alignItems}\n      $display={$display}\n    >\n      {children}\n    </BoxStyle>\n  );\n};\n\nexport const BoxStyle = styled.div<BoxProps>`\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n  margin-top: ${(props) => props.$marginTop};\n  margin-bottom: ${(props) => props.$marginBottom};\n  padding-top: ${(props) => props.$paddingTop};\n  padding-bottom: ${(props) => props.$paddingBottom};\n  padding-left: ${(props) => props.$paddingLeft};\n  padding-right: ${(props) => props.$paddingRight};\n  display: ${(props) => props.$display};\n  flex-direction: ${(props) => props.$flexDirection};\n  flex-wrap: ${(props) => props.$flexWrap};\n  justify-content: ${(props) => props.$justifyContent};\n  align-items: ${(props) => props.$alignItems};\n  background-color: ${(props) => props.$backgroundColor};\n`;\n\nexport default Box;\n"],"mappings":"AACA,OAASA,MAAM,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAmB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAEA,KAAM,CAAAC,GAAG,CAAIC,KAAe,EAAK,CAC/B,KAAM,CACJC,gBAAgB,CAAG,aAAa,CAChCC,OAAO,CAAG,MAAM,CAChBC,MAAM,CAAG,MAAM,CACfC,UAAU,CAAG,GAAG,CAChBC,aAAa,CAAG,GAAG,CACnBC,WAAW,CAAG,GAAG,CACjBC,cAAc,CAAG,GAAG,CACpBC,YAAY,CAAG,GAAG,CAClBC,aAAa,CAAG,GAAG,CACnBC,cAAc,CAAG,KAAK,CACtBC,eAAe,CAAG,YAAY,CAC9BC,SAAS,CAAG,QAAQ,CACpBC,WAAW,CAAG,SAAS,CACvBC,QAAQ,CAAG,MAAM,CACjBC,QACF,CAAC,CAAGf,KAAK,CAET,mBACEF,IAAA,CAACkB,QAAQ,EACPf,gBAAgB,CAAEA,gBAAiB,CACnCC,OAAO,CAAEA,OAAQ,CACjBC,MAAM,CAAEA,MAAO,CACfC,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BC,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/BC,YAAY,CAAEA,YAAa,CAC3BC,aAAa,CAAEA,aAAc,CAC7BC,cAAc,CAAEA,cAAe,CAC/BC,eAAe,CAAEA,eAAgB,CACjCC,SAAS,CAAEA,SAAU,CACrBC,WAAW,CAAEA,WAAY,CACzBC,QAAQ,CAAEA,QAAS,CAAAC,QAAA,CAElBA,QAAQ,CACD,CAAC,CAEf,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAGpB,MAAM,CAACqB,GAAa;AAC5C,WAAYjB,KAAK,EAAKA,KAAK,CAACG,MAAM;AAClC,YAAaH,KAAK,EAAKA,KAAK,CAACE,OAAO;AACpC,gBAAiBF,KAAK,EAAKA,KAAK,CAACI,UAAU;AAC3C,mBAAoBJ,KAAK,EAAKA,KAAK,CAACK,aAAa;AACjD,iBAAkBL,KAAK,EAAKA,KAAK,CAACM,WAAW;AAC7C,oBAAqBN,KAAK,EAAKA,KAAK,CAACO,cAAc;AACnD,kBAAmBP,KAAK,EAAKA,KAAK,CAACQ,YAAY;AAC/C,mBAAoBR,KAAK,EAAKA,KAAK,CAACS,aAAa;AACjD,aAAcT,KAAK,EAAKA,KAAK,CAACc,QAAQ;AACtC,oBAAqBd,KAAK,EAAKA,KAAK,CAACU,cAAc;AACnD,eAAgBV,KAAK,EAAKA,KAAK,CAACY,SAAS;AACzC,qBAAsBZ,KAAK,EAAKA,KAAK,CAACW,eAAe;AACrD,iBAAkBX,KAAK,EAAKA,KAAK,CAACa,WAAW;AAC7C,sBAAuBb,KAAK,EAAKA,KAAK,CAACC,gBAAgB;AACvD,CAAC,CAED,cAAe,CAAAF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}