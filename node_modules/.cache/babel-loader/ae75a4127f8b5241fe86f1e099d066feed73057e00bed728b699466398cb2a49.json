{"ast":null,"code":"var _jsxFileName = \"/Users/gayoung/Documents/developer/project/protfolio/src/components/Layout/Aside.tsx\";\nimport { css, styled } from \"styled-components\";\nimport { theme } from \"@/styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**---------------------------------------------------------------------------/\n  * ! Aside 컴포넌트\n  * * 사이드바 레이아웃을 위한 컴포넌트\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `theme.colors.background.main`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$flexDirection`: `flex` 레이아웃의 방향 설정, 기본값은 `\"column\"`\n  * * `$justifyContent`: `flex` 정렬 방식 설정, 기본값 없음\n  * * `$flexWrap`: `flex-wrap` 설정, 기본값 없음\n  * * `$alignItems`: `align-items` 설정, 기본값 없음\n  * * `$sx`: 추가적인 스타일을 위한 객체 (예: `{ marginTop: \"10px\" }`)\n  * * `children`: 내부에 포함될 ReactNode 요소\n  * \n  * * flex 레이아웃을 사용하여 내부 요소를 배치하며, 사이드바 영역에 적합한 스타일 제공\n  * * 기본적으로 `aside` 요소로 렌더링됨\n/**--------------------------------------------------------------------------*/\n\nconst Aside = props => {\n  const {\n    $backgroundColor = theme.colors.background.main,\n    $height = \"auto\",\n    children,\n    $flexDirection = \"column\",\n    $justifyContent,\n    $flexWrap,\n    $alignItems,\n    $sx = {}\n  } = props;\n  return /*#__PURE__*/_jsxDEV(AsideStyle, {\n    $backgroundColor: $backgroundColor,\n    $height: $height,\n    $flexDirection: $flexDirection,\n    $justifyContent: $justifyContent,\n    $flexWrap: $flexWrap,\n    $alignItems: $alignItems,\n    $sx: $sx,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = Aside;\nexport const AsideStyle = styled.aside`\n  width: 100%;\n  height: ${props => props.$height};\n  display: flex;\n  flex-direction: ${props => props.$flexDirection};\n  justify-content: ${props => props.$justifyContent || \"initial\"};\n  flex-wrap: ${props => props.$flexWrap || \"nowrap\"};\n  align-items: ${props => props.$alignItems || \"initial\"};\n  flex-grow: 1;\n  padding: 50px 0;\n  background-color: ${props => props.$backgroundColor};\n  ${props => css({\n  ...props.$sx\n})}\n`;\n_c2 = AsideStyle;\nexport default Aside;\nvar _c, _c2;\n$RefreshReg$(_c, \"Aside\");\n$RefreshReg$(_c2, \"AsideStyle\");","map":{"version":3,"names":["css","styled","theme","jsxDEV","_jsxDEV","Aside","props","$backgroundColor","colors","background","main","$height","children","$flexDirection","$justifyContent","$flexWrap","$alignItems","$sx","AsideStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","aside","_c2","$RefreshReg$"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Layout/Aside.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { css, styled } from \"styled-components\";\nimport { theme } from \"@/styles/theme\";\n\nexport type AsideProps = {\n  $backgroundColor?: string;\n  $height?: string;\n  children: ReactNode;\n  $flexDirection?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  $justifyContent?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  $flexWrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  $alignItems?: \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\";\n  $sx?: Record<string, any>;\n};\n\n/**---------------------------------------------------------------------------/\n  * ! Aside 컴포넌트\n  * * 사이드바 레이아웃을 위한 컴포넌트\n  * * `$backgroundColor`: 배경 색상 설정, 기본값은 `theme.colors.background.main`\n  * * `$height`: 높이 설정, 기본값은 `\"auto\"`\n  * * `$flexDirection`: `flex` 레이아웃의 방향 설정, 기본값은 `\"column\"`\n  * * `$justifyContent`: `flex` 정렬 방식 설정, 기본값 없음\n  * * `$flexWrap`: `flex-wrap` 설정, 기본값 없음\n  * * `$alignItems`: `align-items` 설정, 기본값 없음\n  * * `$sx`: 추가적인 스타일을 위한 객체 (예: `{ marginTop: \"10px\" }`)\n  * * `children`: 내부에 포함될 ReactNode 요소\n  * \n  * * flex 레이아웃을 사용하여 내부 요소를 배치하며, 사이드바 영역에 적합한 스타일 제공\n  * * 기본적으로 `aside` 요소로 렌더링됨\n/**--------------------------------------------------------------------------*/\n\nconst Aside = (props: AsideProps) => {\n  const {\n    $backgroundColor = theme.colors.background.main,\n    $height = \"auto\",\n    children,\n    $flexDirection = \"column\",\n    $justifyContent,\n    $flexWrap,\n    $alignItems,\n    $sx = {},\n  } = props;\n\n  return (\n    <AsideStyle\n      $backgroundColor={$backgroundColor}\n      $height={$height}\n      $flexDirection={$flexDirection}\n      $justifyContent={$justifyContent}\n      $flexWrap={$flexWrap}\n      $alignItems={$alignItems}\n      $sx={$sx}\n    >\n      {children}\n    </AsideStyle>\n  );\n};\n\nexport const AsideStyle = styled.aside<{\n  $backgroundColor: string;\n  $height: string;\n  $flexDirection: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  $justifyContent?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  $flexWrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  $alignItems?: \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\";\n  $sx: Record<string, any>;\n}>`\n  width: 100%;\n  height: ${(props) => props.$height};\n  display: flex;\n  flex-direction: ${(props) => props.$flexDirection};\n  justify-content: ${(props) => props.$justifyContent || \"initial\"};\n  flex-wrap: ${(props) => props.$flexWrap || \"nowrap\"};\n  align-items: ${(props) => props.$alignItems || \"initial\"};\n  flex-grow: 1;\n  padding: 50px 0;\n  background-color: ${(props) => props.$backgroundColor};\n  ${(props) => css({ ...props.$sx })}\n`;\n\nexport default Aside;\n"],"mappings":";AACA,SAASA,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAiB,IAAK;EACnC,MAAM;IACJC,gBAAgB,GAAGL,KAAK,CAACM,MAAM,CAACC,UAAU,CAACC,IAAI;IAC/CC,OAAO,GAAG,MAAM;IAChBC,QAAQ;IACRC,cAAc,GAAG,QAAQ;IACzBC,eAAe;IACfC,SAAS;IACTC,WAAW;IACXC,GAAG,GAAG,CAAC;EACT,CAAC,GAAGX,KAAK;EAET,oBACEF,OAAA,CAACc,UAAU;IACTX,gBAAgB,EAAEA,gBAAiB;IACnCI,OAAO,EAAEA,OAAQ;IACjBE,cAAc,EAAEA,cAAe;IAC/BC,eAAe,EAAEA,eAAgB;IACjCC,SAAS,EAAEA,SAAU;IACrBC,WAAW,EAAEA,WAAY;IACzBC,GAAG,EAAEA,GAAI;IAAAL,QAAA,EAERA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAACC,EAAA,GAzBIlB,KAAK;AA2BX,OAAO,MAAMa,UAAU,GAAGjB,MAAM,CAACuB,KAc/B;AACF;AACA,YAAalB,KAAK,IAAKA,KAAK,CAACK,OAAO;AACpC;AACA,oBAAqBL,KAAK,IAAKA,KAAK,CAACO,cAAc;AACnD,qBAAsBP,KAAK,IAAKA,KAAK,CAACQ,eAAe,IAAI,SAAS;AAClE,eAAgBR,KAAK,IAAKA,KAAK,CAACS,SAAS,IAAI,QAAQ;AACrD,iBAAkBT,KAAK,IAAKA,KAAK,CAACU,WAAW,IAAI,SAAS;AAC1D;AACA;AACA,sBAAuBV,KAAK,IAAKA,KAAK,CAACC,gBAAgB;AACvD,IAAKD,KAAK,IAAKN,GAAG,CAAC;EAAE,GAAGM,KAAK,CAACW;AAAI,CAAC,CAAC;AACpC,CAAC;AAACQ,GAAA,GA1BWP,UAAU;AA4BvB,eAAeb,KAAK;AAAC,IAAAkB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}