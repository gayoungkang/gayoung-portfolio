{"ast":null,"code":"import{styled,css}from\"styled-components\";import{theme}from\"@/styles/theme\";import{darken}from\"@/utils/colorUtils\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IconButton=_ref=>{let{children,$color=theme.colors.grey[100],$backgroundColor=theme.colors.primary.main,disabled=false,onClick,isBackground=true,isHover=true,captionText,href,$sx={}}=_ref;const handleClick=()=>{if(href){window.open(href,\"_blank\",\"새창 이동\");}else if(onClick){onClick();}};return/*#__PURE__*/_jsxs(ButtonStyle,{$color:$color,$backgroundColor:$backgroundColor,disabled:disabled,onClick:handleClick,$isBackground:isBackground,$isHover:isHover,$sx:$sx// sx를 $sx로 전달\n,children:[/*#__PURE__*/_jsx(IconWrapper,{$color:$color,children:children}),captionText&&isHover&&/*#__PURE__*/_jsx(Caption,{children:captionText})]});};const ButtonStyle=styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n  font-size: 1.75rem;\n  font-weight: bold;\n  margin: 5px;\n  cursor: ${props=>props.disabled?\"not-allowed\":\"pointer\"};\n  background-color: ${props=>props.$isBackground&&!props.disabled?props.$backgroundColor:\"transparent\"};\n  color: ${props=>props.$isBackground?props.$color:props.$backgroundColor};\n  border-radius: 50%;\n  position: relative;\n\n  &:hover {\n    background-color: ${props=>props.$isHover&&!props.disabled?props.$backgroundColor?darken(props.$backgroundColor,0.2):theme.colors.primary.dark:\"transparent\"};\n    color: ${props=>props.$isHover&&!props.disabled?theme.colors.grey[100]:props.$color};\n  }\n\n  &:disabled {\n    background-color: ${props=>props.$isBackground?theme.colors.disabled.contained:\"transparent\"};\n    color: ${theme.colors.disabled.outlined};\n    cursor: not-allowed;\n  }\n\n  ${props=>props.$sx&&css({...props.$sx})}\n`;const IconWrapper=styled.span`\n  margin: 2px;\n  display: flex;\n  color: ${props=>props.$color};\n`;const Caption=styled.p`\n  width: max-content;\n  position: absolute;\n  bottom: -20px;\n  font-size: 12px;\n  color: ${theme.colors.grey[200]};\n  text-align: center;\n  visibility: hidden;\n  ${ButtonStyle}:hover & {\n    visibility: visible;\n  }\n`;export default IconButton;","map":{"version":3,"names":["styled","css","theme","darken","jsx","_jsx","jsxs","_jsxs","IconButton","_ref","children","$color","colors","grey","$backgroundColor","primary","main","disabled","onClick","isBackground","isHover","captionText","href","$sx","handleClick","window","open","ButtonStyle","$isBackground","$isHover","IconWrapper","Caption","button","props","dark","contained","outlined","span","p"],"sources":["/Users/gayoung/Documents/developer/project/protfolio/src/components/Button/IconButton.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { styled, css } from \"styled-components\";\nimport { theme } from \"@/styles/theme\";\nimport { darken } from \"@/utils/colorUtils\";\n\nexport type IconButtonProps = {\n  children: ReactNode;\n  $color?: string;\n  $backgroundColor?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  isBackground?: boolean;\n  isHover?: boolean;\n  captionText?: string;\n  href?: string;\n  $sx?: Record<string, any>;\n};\n\nconst IconButton = ({\n  children,\n  $color = theme.colors.grey[100],\n  $backgroundColor = theme.colors.primary.main,\n  disabled = false,\n  onClick,\n  isBackground = true,\n  isHover = true,\n  captionText,\n  href,\n  $sx = {},\n}: IconButtonProps) => {\n  const handleClick = () => {\n    if (href) {\n      window.open(href, \"_blank\", \"새창 이동\");\n    } else if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <ButtonStyle\n      $color={$color}\n      $backgroundColor={$backgroundColor}\n      disabled={disabled}\n      onClick={handleClick}\n      $isBackground={isBackground}\n      $isHover={isHover}\n      $sx={$sx} // sx를 $sx로 전달\n    >\n      <IconWrapper $color={$color}>{children}</IconWrapper>\n      {captionText && isHover && <Caption>{captionText}</Caption>}\n    </ButtonStyle>\n  );\n};\n\nconst ButtonStyle = styled.button<{\n  $color: string;\n  $backgroundColor: string;\n  disabled: boolean;\n  $isBackground: boolean;\n  $isHover: boolean;\n  $sx?: Record<string, any>;\n}>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n  font-size: 1.75rem;\n  font-weight: bold;\n  margin: 5px;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  background-color: ${(props) =>\n    props.$isBackground && !props.disabled\n      ? props.$backgroundColor\n      : \"transparent\"};\n  color: ${(props) =>\n    props.$isBackground ? props.$color : props.$backgroundColor};\n  border-radius: 50%;\n  position: relative;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.$isHover && !props.disabled\n        ? props.$backgroundColor\n          ? darken(props.$backgroundColor, 0.2)\n          : theme.colors.primary.dark\n        : \"transparent\"};\n    color: ${(props) =>\n      props.$isHover && !props.disabled\n        ? theme.colors.grey[100]\n        : props.$color};\n  }\n\n  &:disabled {\n    background-color: ${(props) =>\n      props.$isBackground ? theme.colors.disabled.contained : \"transparent\"};\n    color: ${theme.colors.disabled.outlined};\n    cursor: not-allowed;\n  }\n\n  ${(props) => props.$sx && css({ ...props.$sx })}\n`;\n\nconst IconWrapper = styled.span<{ $color: string }>`\n  margin: 2px;\n  display: flex;\n  color: ${(props) => props.$color};\n`;\n\nconst Caption = styled.p`\n  width: max-content;\n  position: absolute;\n  bottom: -20px;\n  font-size: 12px;\n  color: ${theme.colors.grey[200]};\n  text-align: center;\n  visibility: hidden;\n  ${ButtonStyle}:hover & {\n    visibility: visible;\n  }\n`;\n\nexport default IconButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}